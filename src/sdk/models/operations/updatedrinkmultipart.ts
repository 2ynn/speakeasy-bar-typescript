/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";

export class Photo extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "multipart_form, content=true" })
    content: Uint8Array;

    @SpeakeasyMetadata({ data: "multipart_form, name=photo" })
    fileName: string;
}

export class UpdateDrinkMultipartRequestBody extends SpeakeasyBase {
    /**
     * The name of the drink.
     */
    @SpeakeasyMetadata({ data: "multipart_form, name=name" })
    name?: string;

    /**
     * A photo of the drink.
     */
    @SpeakeasyMetadata({ data: "multipart_form, file=true" })
    photo?: Photo;

    /**
     * The price of one unit of the drink in US cents.
     */
    @SpeakeasyMetadata({ data: "multipart_form, name=price" })
    price?: number;

    /**
     * The type of drink.
     */
    @SpeakeasyMetadata({ data: "multipart_form, name=type" })
    type?: shared.DrinkType;
}

export class UpdateDrinkMultipartRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
    requestBody: UpdateDrinkMultipartRequestBody;

    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=productCode" })
    productCode: string;
}

export class UpdateDrinkMultipartResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    body?: Uint8Array;

    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * The drink was updated successfully.
     */
    @SpeakeasyMetadata()
    drink?: shared.Drink;

    /**
     * An unknown error occurred interacting with the API.
     */
    @SpeakeasyMetadata()
    error?: shared.ErrorT;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;
}
