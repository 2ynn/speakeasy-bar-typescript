/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * An ingredient required to make a drink.
 */
export type DrinkIngredient = {
    /**
     * The product code of an ingredient, only available when authenticated.
     */
    ingredientProductCode: string;
    /**
     * The number of units of the ingredient required to make the drink.
     */
    quantity: number;
};

/** @internal */
export namespace DrinkIngredient$ {
    export const inboundSchema: z.ZodType<DrinkIngredient, z.ZodTypeDef, unknown> = z
        .object({
            ingredientProductCode: z.string(),
            quantity: z.number().int(),
        })
        .transform((v) => {
            return {
                ingredientProductCode: v.ingredientProductCode,
                quantity: v.quantity,
            };
        });

    export type Outbound = {
        ingredientProductCode: string;
        quantity: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DrinkIngredient> = z
        .object({
            ingredientProductCode: z.string(),
            quantity: z.number().int(),
        })
        .transform((v) => {
            return {
                ingredientProductCode: v.ingredientProductCode,
                quantity: v.quantity,
            };
        });
}
