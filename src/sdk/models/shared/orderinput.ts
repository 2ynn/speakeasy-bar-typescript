/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { OrderType, OrderType$inboundSchema, OrderType$outboundSchema } from "./ordertype.js";
import * as z from "zod";

/**
 * An order for a drink or ingredient.
 */
export type OrderInput = {
    /**
     * The product code of the drink or ingredient.
     */
    productCode: string;
    /**
     * The number of units of the drink or ingredient to order.
     */
    quantity: number;
    /**
     * The type of order.
     */
    type: OrderType;
};

/** @internal */
export const OrderInput$inboundSchema: z.ZodType<OrderInput, z.ZodTypeDef, unknown> = z.object({
    productCode: z.string(),
    quantity: z.number().int(),
    type: OrderType$inboundSchema,
});

/** @internal */
export type OrderInput$Outbound = {
    productCode: string;
    quantity: number;
    type: string;
};

/** @internal */
export const OrderInput$outboundSchema: z.ZodType<OrderInput$Outbound, z.ZodTypeDef, OrderInput> =
    z.object({
        productCode: z.string(),
        quantity: z.number().int(),
        type: OrderType$outboundSchema,
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OrderInput$ {
    /** @deprecated use `OrderInput$inboundSchema` instead. */
    export const inboundSchema = OrderInput$inboundSchema;
    /** @deprecated use `OrderInput$outboundSchema` instead. */
    export const outboundSchema = OrderInput$outboundSchema;
    /** @deprecated use `OrderInput$Outbound` instead. */
    export type Outbound = OrderInput$Outbound;
}
