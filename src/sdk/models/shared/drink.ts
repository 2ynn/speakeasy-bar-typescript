/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { DrinkType, DrinkType$inboundSchema, DrinkType$outboundSchema } from "./drinktype.js";
import * as z from "zod";

export type Drink = {
    /**
     * The name of the drink.
     */
    name: string;
    /**
     * The price of one unit of the drink in US cents.
     */
    price: number;
    /**
     * The product code of the drink, only available when authenticated.
     */
    productCode?: string | undefined;
    /**
     * The number of units of the drink in stock, only available when authenticated.
     */
    stock?: number | undefined;
    /**
     * The type of drink.
     */
    type?: DrinkType | undefined;
};

/** @internal */
export const Drink$inboundSchema: z.ZodType<Drink, z.ZodTypeDef, unknown> = z.object({
    name: z.string(),
    price: z.number(),
    productCode: z.string().optional(),
    stock: z.number().int().optional(),
    type: DrinkType$inboundSchema.optional(),
});

/** @internal */
export type Drink$Outbound = {
    name: string;
    price: number;
    productCode?: string | undefined;
    stock?: number | undefined;
    type?: string | undefined;
};

/** @internal */
export const Drink$outboundSchema: z.ZodType<Drink$Outbound, z.ZodTypeDef, Drink> = z.object({
    name: z.string(),
    price: z.number(),
    productCode: z.string().optional(),
    stock: z.number().int().optional(),
    type: DrinkType$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Drink$ {
    /** @deprecated use `Drink$inboundSchema` instead. */
    export const inboundSchema = Drink$inboundSchema;
    /** @deprecated use `Drink$outboundSchema` instead. */
    export const outboundSchema = Drink$outboundSchema;
    /** @deprecated use `Drink$Outbound` instead. */
    export type Outbound = Drink$Outbound;
}
